[main]

# 	IOC 容器知识
# 1. 对象名=全限定类名		相当于调用无参的构造函数创建对象
# 2. 对象名.属性名=值		相当于调用 setter 方法设置值
# 3. 对象名.属性名=$对象引用	相当于调用setter 方法设置对象引用

# INI 配置知识
# 1. 类似java中的properties(key=value)，不过提供了分类的特性，key在每个部分中不重复即可
# 2. shiro 分类有：
#	[main] securityManager 及其依赖配置
#	[users] 用户/密码及其角色配置，用户名=密码，角色1，角色2
#	[roles] 角色与权限间的关系配置，角色=权限1，权限2
#	[urls] 用于web，提供了对web url拦截相关的配置，url=拦截器[参数]，拦截器
#			/index.html=anon
#			/admin/**=authc,roles[admin],perms["permission1"]
#

# authenticator
authenticator=org.apache.shiro.authc.pam.ModularRealmAuthenticator
authenticationStrategy=org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy
authenticator.authenticationStrategy=$authenticationStrategy
securityManager.authenticator=$authenticator

# authorizer
authorizer=org.apache.shiro.authz.ModularRealmAuthorizer
permissionResolver=org.apache.shiro.authz.permission.WildcardPermissionResolver
authorizer.permissionResolver=$permissionResolver
securityManager.authorizer=$authorizer

# realm
dataSource=com.alibaba.druid.pool.DruidDataSource
dataSource.driverClassName=org.h2.Driver
dataSource.url=jdbc:h2:file:~/.h2/shiro-jdbc-authorizer
dataSource.validationQuery=select 1

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource=$dataSource
jdbcRealm.permissionsLookupEnabled=true
securityManager.realms=$jdbcRealm